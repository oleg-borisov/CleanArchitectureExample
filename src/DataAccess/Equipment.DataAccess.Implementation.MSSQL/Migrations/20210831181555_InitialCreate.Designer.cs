// <auto-generated />
using Equipment.DataAccess.Implementation.MSSQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Equipment.DataAccess.Implementation.MSSQL.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20210831181555_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Equipment.Entities.Models.Building", b =>
                {
                    b.Property<int>("BuildingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BuildingId");

                    b.ToTable("Buildings");

                    b.HasData(
                        new
                        {
                            BuildingId = 1,
                            Name = "Административное здание"
                        },
                        new
                        {
                            BuildingId = 2,
                            Name = "Транспортный цех"
                        });
                });

            modelBuilder.Entity("Equipment.Entities.Models.EquipmentItem", b =>
                {
                    b.Property<int>("EquipmentTypeId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("EquipmentTypeId", "RoomId");

                    b.HasIndex("RoomId");

                    b.ToTable("EquipmentItems");

                    b.HasData(
                        new
                        {
                            EquipmentTypeId = 1,
                            RoomId = 1,
                            EquipmentItemId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            EquipmentTypeId = 2,
                            RoomId = 1,
                            EquipmentItemId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            EquipmentTypeId = 3,
                            RoomId = 1,
                            EquipmentItemId = 3,
                            Quantity = 1
                        },
                        new
                        {
                            EquipmentTypeId = 4,
                            RoomId = 4,
                            EquipmentItemId = 4,
                            Quantity = 1
                        },
                        new
                        {
                            EquipmentTypeId = 3,
                            RoomId = 4,
                            EquipmentItemId = 5,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("Equipment.Entities.Models.EquipmentType", b =>
                {
                    b.Property<int>("EquipmentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EquipmentTypeId");

                    b.ToTable("EquipmentTypes");

                    b.HasData(
                        new
                        {
                            EquipmentTypeId = 1,
                            Name = "Сервер"
                        },
                        new
                        {
                            EquipmentTypeId = 2,
                            Name = "Клавиатура"
                        },
                        new
                        {
                            EquipmentTypeId = 3,
                            Name = "Мышка"
                        },
                        new
                        {
                            EquipmentTypeId = 4,
                            Name = "Ноутбук"
                        });
                });

            modelBuilder.Entity("Equipment.Entities.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BuildingId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomId");

                    b.HasIndex("BuildingId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            BuildingId = 1,
                            Name = "Серверная"
                        },
                        new
                        {
                            RoomId = 2,
                            BuildingId = 1,
                            Name = "Приёмная"
                        },
                        new
                        {
                            RoomId = 3,
                            BuildingId = 1,
                            Name = "Бухгалтерия"
                        },
                        new
                        {
                            RoomId = 4,
                            BuildingId = 1,
                            Name = "Кабинет директора"
                        },
                        new
                        {
                            RoomId = 5,
                            BuildingId = 2,
                            Name = "Автомастерская"
                        },
                        new
                        {
                            RoomId = 6,
                            BuildingId = 2,
                            Name = "Гараж"
                        },
                        new
                        {
                            RoomId = 7,
                            BuildingId = 2,
                            Name = "Кладовая"
                        });
                });

            modelBuilder.Entity("Equipment.Entities.Models.EquipmentItem", b =>
                {
                    b.HasOne("Equipment.Entities.Models.EquipmentType", "EquipmentType")
                        .WithMany("EquipmentItems")
                        .HasForeignKey("EquipmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Equipment.Entities.Models.Room", "Room")
                        .WithMany("EquipmentItems")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipmentType");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Equipment.Entities.Models.Room", b =>
                {
                    b.HasOne("Equipment.Entities.Models.Building", "Building")
                        .WithMany("Rooms")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("Equipment.Entities.Models.Building", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Equipment.Entities.Models.EquipmentType", b =>
                {
                    b.Navigation("EquipmentItems");
                });

            modelBuilder.Entity("Equipment.Entities.Models.Room", b =>
                {
                    b.Navigation("EquipmentItems");
                });
#pragma warning restore 612, 618
        }
    }
}
